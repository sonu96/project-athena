name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: project-athena-personal
  SERVICE_NAME: athena-agent
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=backend --cov-report=xml
      continue-on-error: true  # Don't fail if no tests exist yet
    
    - name: Check code quality
      run: |
        pip install flake8 black
        flake8 backend/ --max-line-length=120 || true
        black backend/ --check || true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    
    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker
    
    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
    
    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --set-env-vars="MODE=PRODUCTION" \
          --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID" \
          --set-secrets="OPENAI_API_KEY=openai-api-key:latest,MEM0_API_KEY=mem0-api-key:latest,AGENT_PRIVATE_KEY=agent-private-key:latest" \
          --memory=512Mi \
          --cpu=1 \
          --timeout=60 \
          --concurrency=10 \
          --max-instances=3 \
          --min-instances=0
    
    - name: Display service URL
      run: |
        echo "Service deployed to:"
        gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)'